"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

"""
import datetime
import enum
import os
import zoneinfo
from pathlib import Path

import dj_database_url
from django.utils import timezone
from dotenv import load_dotenv

from core import dict_helper

load_dotenv()


class ServerEnv(enum.Enum):
    """
    Enum that represents where the server is running.
    """
    LOCAL = "LOCAL"
    PROD = "PROD"
    STAGING = "STAGING"
    COLLECT_STATIC = "COLLECT_STATIC"


# General settings
DEBUG = False  # Never run debug in prod

# Pre-settings env settings
ENV = ServerEnv(os.environ.get("ENV", "LOCAL").upper())
if ENV == ServerEnv.PROD or ENV == ServerEnv.STAGING:
    DEBUG = False  # Never run debug in prod
    ALLOWED_HOSTS = []
    CORS_ALLOWED_ORIGINS = []


if ENV == ServerEnv.PROD:
    ALLOWED_HOSTS = [
        "agent-connect-prod-eapqqgtmka-uw.a.run.app",
        "agentexcel.com",
        "127.0.0.1",
        "127.0.0.1:8080",
        "0.0.0.0",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://127.0.0.1:8080",
        "http://0.0.0.0:8080",
        "http://agent-connect-prod-eapqqgtmka-uw.a.run.app",
        "https://agent-connect-prod-eapqqgtmka-uw.a.run.app",
        "http://agentexcel.com/",
        "https://agentexcel.com/",
        "http://www.agentexcel.com/",
        "https://www.agentexcel.com/",
    ]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8080",
        "http://0.0.0.0:8080",
        "http://agent-connect-prod-eapqqgtmka-uw.a.run.app",
        "https://agent-connect-prod-eapqqgtmka-uw.a.run.app",
        "http://agentexcel.com/",
        "https://agentexcel.com/",
        "http://www.agentexcel.com/",
        "https://www.agentexcel.com/",
    ]
    BASE_URL = "TODO"

elif ENV == ServerEnv.STAGING:
    ALLOWED_HOSTS = [
        "TODO",
        "127.0.0.1",
        "127.0.0.1:8080",
        "0.0.0.0",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://127.0.0.1:8080",
        "http://0.0.0.0:8080",
        "TODO",
    ]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8080",
        "http://0.0.0.0:8080",
        "TODO",
    ]
    BASE_URL = "TODO"

elif ENV == ServerEnv.LOCAL:
    DEBUG = True  # weee
    ALLOWED_HOSTS = [
        "0.0.0.0",
        "localhost",
        "127.0.0.1",
        "localhost:8000",
        "localhost:3000",
    ]

    CORS_ALLOWED_ORIGINS = [
        "http://0.0.0.0:8000",
        "http://localhost:8000",
        "http://127.0.0.1:8000",
        "http://localhost:3000",
        "http://127.0.0.1:3000",
    ]
    BASE_URL = "http://localhost:8000/"

elif ENV == ServerEnv.COLLECT_STATIC:
    DEBUG = True  # weee
    BASE_URL = "http://localhost:8000/"


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "django-insecure-2kjlnasdva8wherkjsdf")

CORS_ALLOW_CREDENTIALS = True

# Google Config
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = "./server/service-worker.json"


# Serpapi config
SERPAPI_KEY = os.getenv('SERPAPI_KEY')


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    "storages",
    "phonenumber_field",

    "user",
    "agent",
    "search",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.ScryptPasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

TEST_RUNNER = "core.tests.TestSuiteRunner"

SESSION_ENGINE = "django.contrib.sessions.backends.db"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(
        os.environ.get("DB_URL", 'postgres://localhost:5432/agent_local'),
        conn_max_age=600,
        conn_health_checks=True,
    )
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

if DEBUG:
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'user.validator.DebugPasswordValidator',
        },
    ]
else:
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'user.validator.PasswordValidator',
        },
    ]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Auth settings
AUTH_USER_MODEL = 'user.User'

# CORS_ALLOW_ALL_ORIGINS = True  # Todo
SESSION_COOKIE_AGE = 50 * 365 * 24 * 60 * 60  # Consider the session limit to be inf for this project

IS_TEST = False


if ENV == ServerEnv.PROD:
    STATIC_URL = "https://storage.googleapis.com/agent-connect-prod/"
    STATIC_ROOT = "./static"
elif ENV == ServerEnv.STAGING:
    STATIC_URL = "https://storage.googleapis.com/agent-connect-prod/"
    STATIC_ROOT = "./static"
elif ENV == ServerEnv.LOCAL:
    STATIC_URL = "static/"
    STATIC_ROOT = "./static"
    # STATICFILES_DIRS = [
    #     os.path.join(BASE_DIR, 'static')
    # ]
elif ENV == ServerEnv.COLLECT_STATIC:
    GS_BUCKET_NAME = os.environ.get("GS_BUCKET_NAME", "agent-connect-prod")
    STATIC_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/static/"
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]
    STATICFILES_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"


